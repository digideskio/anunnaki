package google;
 
use strict;
use warnings;
use Data::Dumper;
use LWP::UserAgent;
use IO::Socket;

our $gsock;

BEGIN {
    triggers->add('channel', 'peasant', 'google->search($chan, $msg);');
    triggers->add('channel', 'peasant', 'google->query($chan, $msg);');
}

sub query {
    my ($chan, @data) = ($_[1], split " ", $_[2]);

    my $gsock = IO::Socket::INET->new(PeerAddr => 'www.google.com', PeerPort => '80', 'Proto
}

sub search {
    my ($chan, @data) = ($_[1], split " ", $_[2]);
    $data[0] = '';

    my $page = 'http://google.com/search/sss?q=@data';
    my $ua = LWP::Useragent->new();
    $ua->timeout(10);


    my $result = $ua->get($page);
    $irc::socket->send("PRIVMSG $chan :$result\r\n");
    my $html = $result->content() if $result->is_success();

    for my $line (split /\n/, $html) {
	chomp($line);
	$irc::socket->send("PRIVMSG $chan :$line\r\n");
    }
}

1;
